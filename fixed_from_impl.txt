impl std::convert::From<DeveloperPackError> for DeveloperGameError {
    fn from(err: DeveloperPackError) -> DeveloperGameError {
        match err {
            DeveloperPackError::InsufficientFunds { .. } => DeveloperGameError::InvalidBalance,
            DeveloperPackError::PackNotFound { .. } 
             < /dev/null |  DeveloperPackError::NoPackOpen 
            | DeveloperPackError::NoPackToSkip => DeveloperGameError::NoCardMatch,
            DeveloperPackError::InvalidPackId { .. }
            | DeveloperPackError::InvalidOptionIndex { .. }
            | DeveloperPackError::PackIdMismatch { .. } => DeveloperGameError::InvalidAction,
            DeveloperPackError::InvalidPurchaseStage { .. }
            | DeveloperPackError::InvalidOpenStage { .. }
            | DeveloperPackError::InvalidSelectionStage { .. } => DeveloperGameError::InvalidStage,
            DeveloperPackError::RngSelectionFailed { .. }
            | DeveloperPackError::WeightedSelectionFailed { .. } => DeveloperGameError::RngFailed("Pack generation RNG failure".to_string()),
            _ => DeveloperGameError::InvalidOperation(format!("Pack system error: {}", err)),
        }
    }
}
